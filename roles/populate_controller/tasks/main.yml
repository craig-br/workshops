---
- name: Set controller_login fact
  ansible.builtin.set_fact:
    controller_login: &controller_login
      controller_username: admin
      controller_password: "{{ admin_password }}"
      controller_host: https://{{ ansible_host }}:8443
      validate_certs: false
  no_log: true

- name: Load automation controller vars for specific workshop type
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{role_path}}/vars/{{ workshop_type }}.yml"
    - "{{role_path}}/vars/unsupported_workshop.yml"

- name: Ensure controller is online and working
  ansible.builtin.uri:
    url: https://localhost:8443/api/v2/ping/
    method: GET
    user: admin
    password: "{{ admin_password }}"
    validate_certs: false
    force_basic_auth: true
  register: controller_online
  until: controller_online is success
  delay: 3
  retries: 5

# Disable collections requirements.yml and rely on only EEs
- name: Turn off AWX_COLLECTIONS_ENABLED on controller
  awx.awx.settings:
    name: AWX_COLLECTIONS_ENABLED
    value: false
    <<: *controller_login

#### CREDENTIAL
- name: Add SSH credential into Automation controller
  awx.awx.credential:
    name: "Workshop Credential"
    credential_type: Machine
    organization: "Default"
    <<: *controller_login
    inputs:
      username: ec2-user
      ssh_key_data: "{{ lookup('file', output_dir + '/' + ec2_name_prefix + '-private.pem') }}"

- name: Add controller credential into automation controller
  awx.awx.credential:
    name: "Controller Credential"
    credential_type: Red Hat Ansible Automation Platform
    organization: Default
    <<: *controller_login
    inputs:
      host: "{{ student }}.{{ ec2_name_prefix }}.{{ workshop_dns_zone }}:8443"
      username: admin
      password: "{{ admin_password }}"
#### END OF CREDENTIAL

#### Inventory
- name: Create workshop inventory
  awx.awx.inventory:
    name: "Workshop Inventory"
    organization: "Default"
    <<: *controller_login
  register: workshop_inventory
  until: workshop_inventory is success
  delay: 3
  retries: 5

# - name: copy inventory to awx user
#   copy:
#     src: "/home/{{ username }}/lab_inventory/hosts"
#     remote_src: true
#     dest: "/home/{{ run_commands_user }}"
#     owner: "{{ run_commands_user }}"
#     group: "{{ run_commands_user }}"

# - name: import inventory
#   become_user: "{{ run_commands_user }}"
#   shell: 'awx-manage inventory_import --source=/home/{{ run_commands_user }}/hosts --inventory-name="Workshop Inventory"'
#   register: import_inventory
#   until: import_inventory is not failed
#   retries: 5
# #### end of inventory

### USER
- name: Add student user
  awx.awx.user:
    username: "{{ student }}"
    password: "{{ admin_password }}"
    email: fake@fake.com
    state: present
    superuser: true
    <<: *controller_login

# Workshop specific execution environments
- name: Add specific workshop execution environment
  awx.awx.execution_environment:
    name: "{{ workshop_type }} workshop execution environment"
    image: "{{ lookup('vars', workshop_type + '_ee') }}"
    pull: missing
    <<: *controller_login

- name: Setup workshop specific controller information
  ansible.builtin.include_tasks: "{{ item }}"
  with_first_found:
    - "{{ role_path }}/tasks/{{ workshop_type }}.yml"
    - "{{ role_path }}/tasks/unsupported_workshop.yml"
